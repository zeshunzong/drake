# -*- python -*-

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_binary",
    "drake_cc_googletest",
    "drake_cc_library",
    "drake_cc_package_library",
)
load(
    "@drake//tools/vector_gen:vector_gen.bzl",
    "drake_cc_vector_gen_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")

package(
    default_visibility = ["//visibility:public"],
)

drake_cc_package_library(
    name = "mpm",
    visibility = ["//visibility:public"],
    deps = [
        ":mpm_model", 
        ":mpm_solver",
    ],
)

drake_cc_library(
    name = "Utils",
    hdrs = [
        "Utils.h",
    ],
    deps = [
        "//common:essential",
    ]
)

drake_cc_library(
    name = "MathUtils",
    srcs = [
        "MathUtils.cc",
    ],
    hdrs = [
        "MathUtils.h",
    ],
    deps = [
        "//common:essential",
        "//common:autodiff",
    ],
)

drake_cc_library(
    name = "BSpline",
    srcs = [
        "BSpline.cc",
    ],
    hdrs = [
        "BSpline.h",
    ],
    deps = [
        "//common:essential",
        "//common:autodiff",
    ],
)

drake_cc_library(
    name = "MPMRunTimeStatistics",
    hdrs = [
        "MPMRunTimeStatistics.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "MPMParameters",
    hdrs = [
        "MPMParameters.h",
    ],
    deps = [
        "//common:essential",
    ],
)
'''
drake_cc_library(
    name = "particles_to_bgeo",
    srcs = [
        "particles_to_bgeo.cc",
    ],
    hdrs = [
        "particles_to_bgeo.h",
    ],
    deps = [
        "//common:essential",
        "//common:find_resource",
        "//common:temp_directory",
        "@partio",
    ],
)
'''
drake_cc_library(
    name = "poisson_disk_sampling",
    hdrs = [
        "poisson_disk_sampling.h",
        "//common:eigen_types.h",
    ],
)

drake_cc_library(
    name = "TotalMassEnergyMomentum",
    hdrs = [
        "TotalMassEnergyMomentum.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "AnalyticLevelSet",
    srcs = [
        "AnalyticLevelSet.cc",
    ],
    hdrs = [
        "AnalyticLevelSet.h",
    ],
    deps = [
        "//common:essential",
        "//math:geometric_transform",
    ],
)

drake_cc_library(
    name = "SpatialVelocityTimeDependent",
    srcs = [
        "SpatialVelocityTimeDependent.cc",
    ],
    hdrs = [
        "SpatialVelocityTimeDependent.h",
    ],
    deps = [
        "//common:essential",
        "//multibody/fem:matrix_utilities",
        "//multibody/math:spatial_algebra",
    ],
)

drake_cc_library(
    name = "ElastoPlasticModel",
    srcs = [
        "ElastoPlasticModel.cc",
    ],
    hdrs = [
        "ElastoPlasticModel.h",
    ],
    deps = [
        "//common:essential",
        "//multibody/fem:matrix_utilities",
        ":MathUtils",
    ],
)








drake_cc_library(
    name = "CollisionObject",
    srcs = [
        "CollisionObject.cc",
    ],
    hdrs = [
        "CollisionObject.h",
    ],
    deps = [
        ":AnalyticLevelSet",
        ":SpatialVelocityTimeDependent",
        "//common:essential",
        "//math:geometric_transform",
        "//multibody/fem:matrix_utilities",
        "//multibody/math:spatial_algebra",
    ],
)



drake_cc_library(
    name = "KinematicCollisionObjects",
    srcs = [
        "KinematicCollisionObjects.cc",
    ],
    hdrs = [
        "KinematicCollisionObjects.h",
    ],
    deps = [
        ":CollisionObject",
        "//common:essential",
    ],
)



drake_cc_library(
    name = "CorotatedElasticModel",
    srcs = [
        "CorotatedElasticModel.cc",
    ],
    hdrs = [
        "CorotatedElasticModel.h",
    ],
    deps = [
        ":ElastoPlasticModel",
        "//common:essential",
        "//multibody/fem:matrix_utilities",
    ],
)


'''
drake_cc_library(
    name = "Grid",
    srcs = [
        "Grid.cc",
    ],
    hdrs = [
        "Grid.h",
    ],
    deps = [
        "//common:essential",
        "//geometry/proximity:posed_half_space",
        ":KinematicCollisionObjects",
        ":TotalMassEnergyMomentum",
    ],
)
'''
'''
drake_cc_library(
    name = "GravitationalForce",
    srcs = [
        "GravitationalForce.cc",
    ],
    hdrs = [
        "GravitationalForce.h",
    ],
    deps = [
        ":SparseGrid",
        "//common:essential",
    ],
)
'''

drake_cc_library(
    name = "Particles",
    srcs = [
        "Particles.cc",
    ],
    hdrs = [
        "Particles.h",
    ],
    deps = [
        ":ElastoPlasticModel",
        ":MathUtils",
        ":TotalMassEnergyMomentum",
        "//common:essential",
        "//common:copyable_unique_ptr",
    ],
)

drake_cc_library(
    name = "mpm_solver",
    srcs = [
        "mpm_solver.cc",
    ],
    hdrs = [
        "mpm_solver.h",
    ],
    deps = [
        ":mpm_model",
        "//multibody/fem:discrete_time_integrator",
        "//common:essential",
        ":SparseGrid",
        ":MPMTransfer",
       
    ],
)


drake_cc_library(
    name = "StvkHenckyWithVonMisesModel",
    srcs = [
        "StvkHenckyWithVonMisesModel.cc",
    ],
    hdrs = [
        "StvkHenckyWithVonMisesModel.h",
    ],
    deps = [
        ":ElastoPlasticModel",
        "//common:essential",
        "//multibody/fem:matrix_utilities",
    ],
)

drake_cc_library(
    name = "SparseGrid",
    srcs = [
        "SparseGrid.cc",
    ],
    hdrs = [
        "SparseGrid.h",
    ],
    deps = [
        ":KinematicCollisionObjects",
        ":Particles",
        ":Utils",
        "//common:essential",
        "//geometry/proximity:posed_half_space",
    ],
)

drake_cc_library(
    name = "MPMTransfer",
    srcs = [
        "MPMTransfer.cc",
    ],
    hdrs = [
        "MPMTransfer.h",
    ],
    deps = [
        ":BSpline",
        ":Particles",
        ":SparseGrid",
        "//common:essential",
        "//geometry/query_results:mpm_contact",
    ],
)




drake_cc_library(
    name = "mpm_state",
    srcs = [
        "mpm_state.cc",
    ],
    hdrs = [
        "mpm_state.h",
    ],
    deps = [
        ":Particles",
        "//common:essential",
        "//systems/framework:context",
    ],
)

drake_cc_library(
    name = "mpm_model",
    srcs = [
        "mpm_model.cc",
    ],
    hdrs = [
        "mpm_model.h",
    ],
    deps = [
        ":mpm_state",
        "//common:essential",
        "//multibody/math:spatial_algebra",
        ":ElastoPlasticModel",
        ":AnalyticLevelSet",
        ":poisson_disk_sampling",
        ":CorotatedElasticModel",
        ":SpatialVelocityTimeDependent",
        ":KinematicCollisionObjects",
        ":StvkHenckyWithVonMisesModel",
    ],
)

'''
drake_cc_binary(
    name = "helloworld",
    srcs = [
        "examples/helloworld/main.cpp",
    ],
    deps = [
        ":Grid",
        "//common:essential",
        ":CorotatedElasticModel",
        ":TotalMassEnergyMomentum",
        ":Particles",
        ":MPMParameters",
    ],
)
'''
drake_cc_binary(
    name = "dummymain",
    srcs = [
        "dummy_main.cc",
    ],
    deps = [
        "//common:essential",
        ":CorotatedElasticModel",
        ":TotalMassEnergyMomentum",
        ":Particles",
        ":MPMParameters",
        ":BSpline",
        "//common:autodiff",
        "//math:gradient",
        ":StvkHenckyWithVonMisesModel",
        ":SparseGrid",
        ":MPMTransfer",
        "//multibody/plant",
    ],
)

'''
drake_cc_googletest(
    name = "BSpline_test",
    deps = [
        ":BSpline",
        "//common/test_utilities:eigen_matrix_compare",
    ],
)
'''
drake_cc_googletest(
    name = "Dummy_derivative_test",
    deps = [
        ":BSpline",
        "//common/test_utilities:eigen_matrix_compare",
        "//common:autodiff",
        "//math:gradient",
        ":CorotatedElasticModel",
        ":StvkHenckyWithVonMisesModel",
        ":SparseGrid",
        ":MPMTransfer",
        "//multibody/plant",

    ],
)
drake_cc_googletest(
    name = "TestEnergyForceHessian",
    deps = [
        ":BSpline",
        "//common/test_utilities:eigen_matrix_compare",
        "//common:autodiff",
        "//math:gradient",
        ":CorotatedElasticModel",
        ":StvkHenckyWithVonMisesModel",
        ":SparseGrid",
        ":MPMTransfer",
        "//multibody/plant",

    ],
)
drake_cc_googletest(
    name = "TestMpmContactPair",
    deps = [
        ":BSpline",
        "//common/test_utilities:eigen_matrix_compare",
        "//common:autodiff",
        "//math:gradient",
        ":CorotatedElasticModel",
        ":StvkHenckyWithVonMisesModel",
        ":SparseGrid",
        ":MPMTransfer",
        "//multibody/plant",
        "//geometry:drake_visualizer",
        "//geometry:scene_graph",
        "//multibody/parsing",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "@gflags",

    ],
)

drake_cc_googletest(
    name = "TestMpmContactPairExternalParticles",
    deps = [
        ":BSpline",
        "//common/test_utilities:eigen_matrix_compare",
        "//common:autodiff",
        "//math:gradient",
        ":CorotatedElasticModel",
        ":StvkHenckyWithVonMisesModel",
        ":SparseGrid",
        ":MPMTransfer",
        "//multibody/plant",
        "//geometry:drake_visualizer",
        "//geometry:scene_graph",
        "//multibody/parsing",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "@gflags",

    ],
)

drake_cc_googletest(
    name = "TestMpmContactPairExternalParticlesWithTransform",
    deps = [
        ":BSpline",
        "//common/test_utilities:eigen_matrix_compare",
        "//common:autodiff",
        "//math:gradient",
        ":CorotatedElasticModel",
        ":StvkHenckyWithVonMisesModel",
        ":SparseGrid",
        ":MPMTransfer",
        "//multibody/plant",
        "//geometry:drake_visualizer",
        "//geometry:scene_graph",
        "//multibody/parsing",
        "//systems/analysis:simulator",
        "//systems/framework:diagram",
        "@gflags",

    ],
)

add_lint_tests()
