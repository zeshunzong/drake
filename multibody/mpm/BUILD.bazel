# -*- python -*-

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_binary",
    "drake_cc_googletest",
    "drake_cc_library",
    "drake_cc_package_library",
)
load(
    "@drake//tools/vector_gen:vector_gen.bzl",
    "drake_cc_vector_gen_library",
)
load("//tools/lint:lint.bzl", "add_lint_tests")

package(
    default_visibility = ["//visibility:public"],
)

drake_cc_package_library(
    name = "mpm",
    visibility = ["//visibility:public"],
    deps = [
        ":mpm_model", 
    ],
)

drake_cc_library(
    name = "Utils",
    hdrs = [
        "Utils.h",
    ],
    deps = [
        "//common:essential",
    ]
)

drake_cc_library(
    name = "MathUtils",
    srcs = [
        "MathUtils.cc",
    ],
    hdrs = [
        "MathUtils.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "BSpline",
    srcs = [
        "BSpline.cc",
    ],
    hdrs = [
        "BSpline.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "MPMRunTimeStatistics",
    hdrs = [
        "MPMRunTimeStatistics.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "MPMParameters",
    hdrs = [
        "MPMParameters.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "particles_to_bgeo",
    srcs = [
        "particles_to_bgeo.cc",
    ],
    hdrs = [
        "particles_to_bgeo.h",
    ],
    deps = [
        "//common:essential",
        "//common:find_resource",
        "//common:temp_directory",
        "@partio",
    ],
)

drake_cc_library(
    name = "poisson_disk_sampling",
    hdrs = [
        "poisson_disk_sampling.h",
        "//common:eigen_types.h",
    ],
)

drake_cc_library(
    name = "TotalMassEnergyMomentum",
    hdrs = [
        "TotalMassEnergyMomentum.h",
    ],
    deps = [
        "//common:essential",
    ],
)

drake_cc_library(
    name = "AnalyticLevelSet",
    srcs = [
        "AnalyticLevelSet.cc",
    ],
    hdrs = [
        "AnalyticLevelSet.h",
    ],
    deps = [
        "//common:essential",
        "//math:geometric_transform",
    ],
)

drake_cc_library(
    name = "SpatialVelocityTimeDependent",
    srcs = [
        "SpatialVelocityTimeDependent.cc",
    ],
    hdrs = [
        "SpatialVelocityTimeDependent.h",
    ],
    deps = [
        "//common:essential",
        "//multibody/fem:matrix_utilities",
        "//multibody/math:spatial_algebra",
    ],
)

drake_cc_library(
    name = "ElastoPlasticModel",
    srcs = [
        "ElastoPlasticModel.cc",
    ],
    hdrs = [
        "ElastoPlasticModel.h",
    ],
    deps = [
        "//common:essential",
        "//multibody/fem:matrix_utilities",
    ],
)








drake_cc_library(
    name = "CollisionObject",
    srcs = [
        "CollisionObject.cc",
    ],
    hdrs = [
        "CollisionObject.h",
    ],
    deps = [
        ":AnalyticLevelSet",
        ":SpatialVelocityTimeDependent",
        "//common:essential",
        "//math:geometric_transform",
        "//multibody/fem:matrix_utilities",
        "//multibody/math:spatial_algebra",
    ],
)



drake_cc_library(
    name = "KinematicCollisionObjects",
    srcs = [
        "KinematicCollisionObjects.cc",
    ],
    hdrs = [
        "KinematicCollisionObjects.h",
    ],
    deps = [
        ":CollisionObject",
        "//common:essential",
    ],
)



drake_cc_library(
    name = "CorotatedElasticModel",
    srcs = [
        "CorotatedElasticModel.cc",
    ],
    hdrs = [
        "CorotatedElasticModel.h",
    ],
    deps = [
        ":ElastoPlasticModel",
        "//common:essential",
        "//multibody/fem:matrix_utilities",
    ],
)



drake_cc_library(
    name = "Grid",
    srcs = [
        "Grid.cc",
    ],
    hdrs = [
        "Grid.h",
    ],
    deps = [
        "//common:essential",
        "//geometry/proximity:posed_half_space",
        ":KinematicCollisionObjects",
        ":TotalMassEnergyMomentum",
    ],
)


drake_cc_library(
    name = "GravitationalForce",
    srcs = [
        "GravitationalForce.cc",
    ],
    hdrs = [
        "GravitationalForce.h",
    ],
    deps = [
        ":SparseGrid",
        "//common:essential",
    ],
)


drake_cc_library(
    name = "Particles",
    srcs = [
        "Particles.cc",
    ],
    hdrs = [
        "Particles.h",
    ],
    deps = [
        ":ElastoPlasticModel",
        ":MathUtils",
        ":TotalMassEnergyMomentum",
        "//common:essential",
    ],
)

drake_cc_library(
    name = "SparseGrid",
    srcs = [
        "SparseGrid.cc",
    ],
    hdrs = [
        "SparseGrid.h",
    ],
    deps = [
        ":KinematicCollisionObjects",
        ":Particles",
        ":Utils",
        "//common:essential",
        "//geometry/proximity:posed_half_space",
    ],
)

drake_cc_library(
    name = "MPMTransfer",
    srcs = [
        "MPMTransfer.cc",
    ],
    hdrs = [
        "MPMTransfer.h",
    ],
    deps = [
        ":BSpline",
        ":Particles",
        ":SparseGrid",
        "//common:essential",
    ],
)


drake_cc_library(
    name = "MPMDriver",
    srcs = [
        "MPMDriver.cc",
    ],
    hdrs = [
        "MPMDriver.h",
    ],
    deps = [
        ":AnalyticLevelSet",
        ":ElastoPlasticModel",
        ":GravitationalForce",
        ":MPMParameters",
        ":MPMRunTimeStatistics",
        ":MPMTransfer",
        ":Particles",
        ":SparseGrid",
        ":particles_to_bgeo",
        ":poisson_disk_sampling",
        "//common:essential",
        "//math:geometric_transform",
        "//multibody/math:spatial_algebra",
    ],
)

drake_cc_library(
    name = "mpm_state_system",
    srcs = [
        "mpm_state_system.cc",
    ],
    hdrs = [
        "mpm_state_system.h",
    ],
    deps = [
        "//common:essential",
        "//systems/framework:leaf_system",
    ],
)

drake_cc_library(
    name = "mpm_state",
    srcs = [
        "mpm_state.cc",
    ],
    hdrs = [
        "mpm_state.h",
    ],
    deps = [
        ":mpm_state_system",
        "//common:essential",
        "//systems/framework:context",
    ],
)

drake_cc_library(
    name = "mpm_model",
    srcs = [
        "mpm_model.cc",
        # "fem_model_impl.cc",
    ],
    hdrs = [
        "mpm_model.h",
        # "fem_model_impl.h",
    ],
    deps = [
        # ":dirichlet_boundary_condition",
        # ":fem_element",
        ":mpm_state",
        # ":petsc_symmetric_block_sparse_matrix",
        "//common:essential",
        # "//multibody/contact_solvers:block_sparse_lower_triangular_or_symmetric_matrix",  # noqa
    ],
)


drake_cc_binary(
    name = "helloworld",
    srcs = [
        "examples/helloworld/main.cpp",
    ],
    deps = [
        ":Grid",
        "//common:essential",
        ":CorotatedElasticModel",
        ":TotalMassEnergyMomentum",
        ":Particles",
        ":MPMParameters",
    ],
)
drake_cc_binary(
    name = "ball",
    srcs = [
        "examples/ball/main.cpp",
    ],
    deps = [
        ":CorotatedElasticModel",
        ":MPMDriver",
#        ":SpatialVelocityTimeDependent",
        "//common:essential",
        "//math:geometric_transform",
        "@partio",
    ],
)



add_lint_tests()
